<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move to player
if (instance_exists(obj_player))
{
    x = obj_player.x;
    y = obj_player.y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move 10% towards the player
//---------------------------------
// METHOD 1
//---------------------------------
//BACKUP (Working)
var lag = 0.25; //0.75
if (instance_exists(obj_player))
{
    x += ((obj_player.x - x) * lag)*sqrt(2); // * 0.3
    y += ((obj_player.y - y) * lag)*sqrt(2); // * 0.3
}


/*
//---------------------------------
// METHOD 1
//---------------------------------
//BACKUP (Working)
var lag = 0.75; //0.75
if (instance_exists(obj_player))
{
    x += (obj_player.x - x) * lag; // * 0.3
    y += (obj_player.y - y) * lag; // * 0.3
}

//---------------------------------
// METHOD 2
//---------------------------------
var xTo, yTo;
move_towards_point(mouse_x, mouse_y, 0);
xTo = obj_player.x + lengthdir_x(min(2, distance_to_point(mouse_x, mouse_y)), direction)
yTo = obj_player.y + lengthdir_y(min(2, distance_to_point(mouse_x, mouse_y)), direction)

x += (xTo-x)/2;
y += (yTo-y)/2;

view_xview = -(view_wview/2) + x;
view_yview = -(view_hview/2) + y;

view_xview = clamp(view_xview, 0, room_width-view_wview);


//---------------------------------
// METHOD 3
//---------------------------------
// dizzydratini help 06.29.22
var lag = 0.75; //0.75
var xTo = obj_player.x;
var yTo = obj_player.y;

if (instance_exists(obj_player))
{
  if( x != xTo || y != yTo)
  {
    //Horizontal
    while(x &lt; xTo &amp;&amp; y == yTo)
    {
      x += lag;
    }
    while(x &gt; xTo &amp;&amp; y == yTo)
    {
      x -= lag;
    }
    //Vertical
    while(y &lt; yTo &amp;&amp; x == xTo)
    {
      y += lag;
    }
    while(y &gt; yTo &amp;&amp; x == xTo)
    {
      y -= lag;
    }
    //Diagonal
    while(x &lt; xTo &amp;&amp; y &lt; yTo)
    {
      x += lag * sqrt(2);
      y += lag * sqrt(2);
    }
    while(x &lt; xTo &amp;&amp; y &gt; yTo)
    {
      x += lag * sqrt(2);
      y -= lag * sqrt(2);
    }
    while(x &gt; xTo &amp;&amp; y &gt; yTo)
    {
      x -= lag * sqrt(2);
      y -= lag * sqrt(2);
    }
    while(x &gt; xTo &amp;&amp; y &lt; yTo)
    {
      x -= lag * sqrt(2);
      y += lag * sqrt(2);
    }
  }
  else
  {
    x = xTo;
    y = yTo;
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move to player
if (instance_exists(obj_player))
{
    x = obj_player.x;
    y = obj_player.y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set the view's persistence back
if(instance_exists(obj_player))
{
    obj_view.persistent = true;
    //obj_darkness.persistent = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
