<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blackcat_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>obj_speaker</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
event_inherited();
spd = 1.5;
ispd = 0.15;
image_speed = ispd;
/*
jobdone = false;
spokenwith = false;
*/
closein = 25; //25  //Distance from player before healing
xdis = 25; // 25    //x dis for walking
ydis = 17; // 17    //y dis for walking


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create cat when player health low
depth = -y;

var jobdone = false;
var spokenwith = false;

if(instance_exists(obj_player))
{
    //Set sprite to sitting
    if(point_distance(x, y, obj_player.x, obj_player.y) &lt;= closein)
    {   
        //Freeze cat
        if(jobdone == false)
        {
            sprite_index = spr_blackcat_sitting16;
            image_index = 3;
            image_speed = 0;
        }
        if(obj_player_stats.hp &lt; obj_player_stats.maxhp)
        {
            if(!audio_is_playing(snd_catheal))
            {
                audio_play_sound(snd_catheal, 1, false);
            }

            //Regen health
            obj_player_stats.hp += .1;
            //Regen stamina
            if(obj_player_stats.stamina != obj_player_stats.maxstamina)
            {
                obj_player_stats.stamina = obj_player_stats.maxstamina;
            }
        }
        else
        {
            //Once player reaches full health destroy
            obj_player_stats.hp = obj_player_stats.maxhp;
            jobdone = true;
            closein = 100; //100
            if((obj_player_stats.hp == obj_player_stats.maxhp) &amp;&amp; (jobdone == true))
            {
                    sprite_index = spr_blackcat_fade16;
                    image_index = 1;
                    image_speed = .2;
                    y -= spd;//phy_position_y -= .5;
                    image_alpha -= .05;
                    if(image_alpha &lt;= 0)
                    {
                        instance_destroy();
                    }         
            }
        }
    }
    else if(jobdone == false)
    {
        // Move towards player
        if(x &gt;= obj_player.x + xdis)
        {
            x -= spd;//phy_position_x -= spd;
            sprite_index = spr_blackcat_walking16;
            image_xscale = 1;
        }
        else if(x &lt;= obj_player.x - xdis)
        {
            x += spd;//phy_position_x += spd;
            sprite_index = spr_blackcat_walking16;
            image_xscale = -1;
        }
        
        // Move y value towards player
        if(y &gt;= obj_player.y + ydis)
        {
            y -= spd;//phy_position_y -= spd;
            sprite_index = spr_blackcat_walking16;
        }
        else if(y &lt;= obj_player.y - ydis)
        {
            y += spd;//phy_position_y += spd;
            sprite_index = spr_blackcat_walking16;
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cat message to player
text[0] = "MEW MEW MEOW."
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
